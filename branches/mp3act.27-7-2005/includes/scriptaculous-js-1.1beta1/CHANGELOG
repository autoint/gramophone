*SVN*

* Fixed rendering of last frame of animation when from/to is not 0.0/1.0. [thanks to David Zülke]

* Updated internal Prototype JavaScript framework to version 1.4.0_pre2 (patched w/ workaround for Ajax.Updater init bug)

* Some refactoring of controls.js to get rid of "dirty" implementation detail (dont' ask)

* Added returning the generated combined effects to allow for .cancel() on all effects

* Updated internal Prototype JavaScript framework to version 1.4.0_pre2

*Rails 0.13.1*

* Updated Ajax.Autocompleter to deal with parameters options correctly [Martin Marinschek]

* Updated controls.js to allow multple matches in local localcompletion [Ivan Krstic]

* Make version of prototype.js in lib have a nicer Event object [David Zülke]

* Added incremental and local autocompleting and loads of documentation to controls.js [Ivan Krstic]

* Experimental: make version of prototype.js in lib destroy events on page unload to prevent browser memory leaks

* Fixed a possible memory leak in dragdrop.js

* Make version of prototype.js in lib compatible with some 3rd-party JavaScript libraries (like IE7) by refactoring to use Object.extend() for testing [David Zülke]

* Make effects.js, dragdrop.js and controls.js compatible with some 3rd-party JavaScript libraries (like IE7) by refactoring to use Object.extend() [David Zülke]

* Changed some tests to work better

* Always reset background color on Effect.Highlight; this make change backwards-compatibility, to be sure include style="background-color:(target-color)" on your elements or else elements will fall back to their CSS rules (which is a good thing in most circumstances)

* Removed a possible memory leaks with IE with sortables and droppables (removed references from elements)

* Changes to class extension in effects.js

* Make Effect.Highlight restore any previously set background color when finishing (makes effect work with set CSS classes)

* Added capability to remove draggables/droppables and redeclare sortables in dragdrop.js

* Added Effect.ScrollTo to smoothly scroll the page to an element

* Better Firefox flickering handling on SlideUp/SlideDown

* Some cleaning up in effects.js

* Removed a possible memory leak in IE with draggables

* Added support for cancelling dragging my hitting ESC

* Changed logic of drag-and-drop to only include the last referenced droppable when firing a drop event. This change also offers slight performance gains. [Dominik Wagner]

* Added addtional effects test page, added tests for scriptfragment matching

*1.0.0*

* Changed auto-hiding update div in Ajax.Autocompleter

* Changed default serialization on Ajax.Autocompleter to use Form.Element.serialize

* Added test file for drag/drop inside scrolled elements

* Fixed dragging of unpositioned elements in Internet Explorer

* Change default behaviour of Ajax.Autocompleter to do automatic overlapping, sizing and appear/fade effects

* Fixed Internet Explorer hide-windowed-controls iframe handling

* Changed Ajax.Autocompleter event handling

* Added onShow/onHide callbacks to Ajax.Autocompleter to allow for customized handling/effects

* Fixed SlideUp/SlideDown to restore the overflow CSS property (note: Firefox 1.0.X is buggy, set overflow:hidden as a workaround)

* Fixed BlindUp/BlindDown to restore the overflow CSS property (note: Firefox 1.0.X is buggy, set overflow:hidden as a workaround)

* Fixed draggables with revert:false on repeated drags behaving badly

* Expanded the revert option on draggables to optionally take a function and revert only if it returns true

* Added the dragged element as a parameter to the Draggables.notify callbacks [Michael Sokolov]

* Removed a deprecated reference to Effect2 om Effect.Fold

* Make the percentage on Element.setContentZoom absolute

* Corrected rendering of Ajax.AutoCompleter when focus is lost while updating

* Added (crude) functional tests

* Some slight refactoring in controls.js

* Changed dragdrop.js to use the Effect namespace for its effects

* Updated to Prototype 1.3.0: removal of prototype-ext.js; refactoring.

* Fixed behaviour of cursor keys in Safari on autocomplete script

* Fixed Position.within_including_scrolloffsets

* Fixed sortables that are absolutely positioned

* Fixed unhandled whitespace in Ajax.Autocompleter

* Updated prototype-ext.js to include additions for Ajax.Autocompleter

* Added controls.js, contains AJAX autocompleting text fields from #960

* Refactored Event object

* Renamed effects2.js to effects.js

* Fixed draggables on pages with no droppables

* Moved Event, Position and Element.Class to prototype-ext.js in preparation to Rails 0.13

* Added Effect.Transitions.pulse

* Added Effect.Pulsate and Effect.Fold effect by Justin Palmer

* Added transitions by Mark Pilgrim: .full, .none

* Added effects by Mark Pilgrim: Effect.Grow, Effect.Shrink

* Changed effects namespace to Effect. (Effect2 is deprecated, but works too)

* Changed old Effect.ContentZoom class to Element.setContentZoom() function

* Greatly expanded Effect.Highlight to have user-defined colors and autodetecting the background color

* Converted remaining effects (Squish, Highlight) to new format

* Sortable.create now passes the zindex, starteffect, reverteffect and endeffect options to the underlying Draggables

* Sortable.serialize now honors the only option on Sortable.create

* New overridable options on Draggables: zindex, starteffect, reverteffect, endeffect

* Fix a Gecko engine flicker on Sortables in dragdrop.js

* Fixed event.isLeftClick

* Some small changes in effects2.js

* Refactoring of dragdrop.js

* Added an Object.prototype.inspect() and more verbose messages for js unit testing

* Added test/unittest.js and initial tests in test/html. 

* Cleaning up of effects2.js (convert tabs to spaces)

* Added Rakefile for distribution packaging (default task = make distribution, rake clean for cleaning up)

* Initial check-in and directory layout for the script.aculo.us JavaScripts